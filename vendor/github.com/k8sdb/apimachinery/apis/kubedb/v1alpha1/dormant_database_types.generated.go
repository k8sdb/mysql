// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package v1alpha1

import (
	"errors"
	"fmt"
	"reflect"
	"runtime"
	time "time"

	pkg3_types "github.com/appscode/go/encoding/json/types"
	codec1978 "github.com/ugorji/go/codec"
	pkg5_resource "k8s.io/apimachinery/pkg/api/resource"
	pkg1_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	pkg2_types "k8s.io/apimachinery/pkg/types"
	pkg4_v1 "k8s.io/client-go/pkg/api/v1"
)

const (
	// ----- content types ----
	codecSelferC_UTF85174 = 1
	codecSelferC_RAW5174  = 0
	// ----- value types used ----
	codecSelferValueTypeArray5174 = 10
	codecSelferValueTypeMap5174   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey5174    = 2
	codecSelfer_containerMapValue5174  = 3
	codecSelfer_containerMapEnd5174    = 4
	codecSelfer_containerArrayElem5174 = 6
	codecSelfer_containerArrayEnd5174  = 7
)

var (
	codecSelferBitsize5174                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr5174 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer5174 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 pkg3_types.StrYo
		var v1 pkg5_resource.Quantity
		var v2 pkg1_v1.TypeMeta
		var v3 pkg2_types.UID
		var v4 pkg4_v1.PersistentVolumeClaimSpec
		var v5 time.Time
		_, _, _, _, _, _ = v0, v1, v2, v3, v4, v5
	}
}

func (x *DormantDatabase) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [5]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			yyq2[3] = true
			yyq2[4] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(5)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85174, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85174, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[2] {
					yy10 := &x.ObjectMeta
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else if z.HasExtensions() && z.EncExt(yy10) {
					} else {
						z.EncFallback(yy10)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy12 := &x.ObjectMeta
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else if z.HasExtensions() && z.EncExt(yy12) {
					} else {
						z.EncFallback(yy12)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[3] {
					yy15 := &x.Spec
					yy15.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("spec"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy17 := &x.Spec
					yy17.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[4] {
					yy20 := &x.Status
					yy20.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("status"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy22 := &x.Status
					yy22.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5174)
			}
		}
	}
}

func (x *DormantDatabase) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5174 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5174)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5174 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5174)
		}
	}
}

func (x *DormantDatabase) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5174)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5174)
		switch yys3 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv4 := &x.Kind
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				yyv6 := &x.APIVersion
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ObjectMeta = pkg1_v1.ObjectMeta{}
			} else {
				yyv8 := &x.ObjectMeta
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv8) {
				} else {
					z.DecFallback(yyv8, false)
				}
			}
		case "spec":
			if r.TryDecodeAsNil() {
				x.Spec = DormantDatabaseSpec{}
			} else {
				yyv10 := &x.Spec
				yyv10.CodecDecodeSelf(d)
			}
		case "status":
			if r.TryDecodeAsNil() {
				x.Status = DormantDatabaseStatus{}
			} else {
				yyv11 := &x.Status
				yyv11.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5174)
}

func (x *DormantDatabase) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv13 := &x.Kind
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		yyv15 := &x.APIVersion
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.ObjectMeta = pkg1_v1.ObjectMeta{}
	} else {
		yyv17 := &x.ObjectMeta
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv17) {
		} else {
			z.DecFallback(yyv17, false)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Spec = DormantDatabaseSpec{}
	} else {
		yyv19 := &x.Spec
		yyv19.CodecDecodeSelf(d)
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Status = DormantDatabaseStatus{}
	} else {
		yyv20 := &x.Status
		yyv20.CodecDecodeSelf(d)
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5174)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x *DormantDatabaseSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.WipeOut != false
			yyq2[1] = x.Resume != false
			yyq2[2] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeBool(bool(x.WipeOut))
					}
				} else {
					r.EncodeBool(false)
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("wipeOut"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeBool(bool(x.WipeOut))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeBool(bool(x.Resume))
					}
				} else {
					r.EncodeBool(false)
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("resume"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeBool(bool(x.Resume))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[2] {
					yy10 := &x.Origin
					yy10.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("origin"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy12 := &x.Origin
					yy12.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5174)
			}
		}
	}
}

func (x *DormantDatabaseSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5174 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5174)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5174 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5174)
		}
	}
}

func (x *DormantDatabaseSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5174)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5174)
		switch yys3 {
		case "wipeOut":
			if r.TryDecodeAsNil() {
				x.WipeOut = false
			} else {
				yyv4 := &x.WipeOut
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*bool)(yyv4)) = r.DecodeBool()
				}
			}
		case "resume":
			if r.TryDecodeAsNil() {
				x.Resume = false
			} else {
				yyv6 := &x.Resume
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*bool)(yyv6)) = r.DecodeBool()
				}
			}
		case "origin":
			if r.TryDecodeAsNil() {
				x.Origin = Origin{}
			} else {
				yyv8 := &x.Origin
				yyv8.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5174)
}

func (x *DormantDatabaseSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj9 int
	var yyb9 bool
	var yyhl9 bool = l >= 0
	yyj9++
	if yyhl9 {
		yyb9 = yyj9 > l
	} else {
		yyb9 = r.CheckBreak()
	}
	if yyb9 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.WipeOut = false
	} else {
		yyv10 := &x.WipeOut
		yym11 := z.DecBinary()
		_ = yym11
		if false {
		} else {
			*((*bool)(yyv10)) = r.DecodeBool()
		}
	}
	yyj9++
	if yyhl9 {
		yyb9 = yyj9 > l
	} else {
		yyb9 = r.CheckBreak()
	}
	if yyb9 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Resume = false
	} else {
		yyv12 := &x.Resume
		yym13 := z.DecBinary()
		_ = yym13
		if false {
		} else {
			*((*bool)(yyv12)) = r.DecodeBool()
		}
	}
	yyj9++
	if yyhl9 {
		yyb9 = yyj9 > l
	} else {
		yyb9 = r.CheckBreak()
	}
	if yyb9 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Origin = Origin{}
	} else {
		yyv14 := &x.Origin
		yyv14.CodecDecodeSelf(d)
	}
	for {
		yyj9++
		if yyhl9 {
			yyb9 = yyj9 > l
		} else {
			yyb9 = r.CheckBreak()
		}
		if yyb9 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5174)
		z.DecStructFieldNotFound(yyj9-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x *Origin) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = true
			yyq2[1] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[0] {
					yy4 := &x.ObjectMeta
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else if z.HasExtensions() && z.EncExt(yy4) {
					} else {
						z.EncFallback(yy4)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy6 := &x.ObjectMeta
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else if z.HasExtensions() && z.EncExt(yy6) {
					} else {
						z.EncFallback(yy6)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[1] {
					yy9 := &x.Spec
					yy9.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("spec"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy11 := &x.Spec
					yy11.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5174)
			}
		}
	}
}

func (x *Origin) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5174 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5174)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5174 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5174)
		}
	}
}

func (x *Origin) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5174)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5174)
		switch yys3 {
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ObjectMeta = pkg1_v1.ObjectMeta{}
			} else {
				yyv4 := &x.ObjectMeta
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					z.DecFallback(yyv4, false)
				}
			}
		case "spec":
			if r.TryDecodeAsNil() {
				x.Spec = OriginSpec{}
			} else {
				yyv6 := &x.Spec
				yyv6.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5174)
}

func (x *Origin) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj7 int
	var yyb7 bool
	var yyhl7 bool = l >= 0
	yyj7++
	if yyhl7 {
		yyb7 = yyj7 > l
	} else {
		yyb7 = r.CheckBreak()
	}
	if yyb7 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.ObjectMeta = pkg1_v1.ObjectMeta{}
	} else {
		yyv8 := &x.ObjectMeta
		yym9 := z.DecBinary()
		_ = yym9
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv8) {
		} else {
			z.DecFallback(yyv8, false)
		}
	}
	yyj7++
	if yyhl7 {
		yyb7 = yyj7 > l
	} else {
		yyb7 = r.CheckBreak()
	}
	if yyb7 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Spec = OriginSpec{}
	} else {
		yyv10 := &x.Spec
		yyv10.CodecDecodeSelf(d)
	}
	for {
		yyj7++
		if yyhl7 {
			yyb7 = yyj7 > l
		} else {
			yyb7 = r.CheckBreak()
		}
		if yyb7 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5174)
		z.DecStructFieldNotFound(yyj7-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x *OriginSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Elasticsearch != nil
			yyq2[1] = x.Postgres != nil
			yyq2[2] = x.MySQL != nil
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[0] {
					if x.Elasticsearch == nil {
						r.EncodeNil()
					} else {
						x.Elasticsearch.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("elasticsearch"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.Elasticsearch == nil {
						r.EncodeNil()
					} else {
						x.Elasticsearch.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[1] {
					if x.Postgres == nil {
						r.EncodeNil()
					} else {
						x.Postgres.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("postgres"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.Postgres == nil {
						r.EncodeNil()
					} else {
						x.Postgres.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[2] {
					if x.MySQL == nil {
						r.EncodeNil()
					} else {
						x.MySQL.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("mysql"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.MySQL == nil {
						r.EncodeNil()
					} else {
						x.MySQL.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5174)
			}
		}
	}
}

func (x *OriginSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5174 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5174)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5174 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5174)
		}
	}
}

func (x *OriginSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5174)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5174)
		switch yys3 {
		case "elasticsearch":
			if r.TryDecodeAsNil() {
				if x.Elasticsearch != nil {
					x.Elasticsearch = nil
				}
			} else {
				if x.Elasticsearch == nil {
					x.Elasticsearch = new(ElasticsearchSpec)
				}
				x.Elasticsearch.CodecDecodeSelf(d)
			}
		case "postgres":
			if r.TryDecodeAsNil() {
				if x.Postgres != nil {
					x.Postgres = nil
				}
			} else {
				if x.Postgres == nil {
					x.Postgres = new(PostgresSpec)
				}
				x.Postgres.CodecDecodeSelf(d)
			}
		case "mysql":
			if r.TryDecodeAsNil() {
				if x.MySQL != nil {
					x.MySQL = nil
				}
			} else {
				if x.MySQL == nil {
					x.MySQL = new(MySQLSpec)
				}
				x.MySQL.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5174)
}

func (x *OriginSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj7 int
	var yyb7 bool
	var yyhl7 bool = l >= 0
	yyj7++
	if yyhl7 {
		yyb7 = yyj7 > l
	} else {
		yyb7 = r.CheckBreak()
	}
	if yyb7 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		if x.Elasticsearch != nil {
			x.Elasticsearch = nil
		}
	} else {
		if x.Elasticsearch == nil {
			x.Elasticsearch = new(ElasticsearchSpec)
		}
		x.Elasticsearch.CodecDecodeSelf(d)
	}
	yyj7++
	if yyhl7 {
		yyb7 = yyj7 > l
	} else {
		yyb7 = r.CheckBreak()
	}
	if yyb7 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		if x.Postgres != nil {
			x.Postgres = nil
		}
	} else {
		if x.Postgres == nil {
			x.Postgres = new(PostgresSpec)
		}
		x.Postgres.CodecDecodeSelf(d)
	}
	yyj7++
	if yyhl7 {
		yyb7 = yyj7 > l
	} else {
		yyb7 = r.CheckBreak()
	}
	if yyb7 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		if x.MySQL != nil {
			x.MySQL = nil
		}
	} else {
		if x.MySQL == nil {
			x.MySQL = new(MySQLSpec)
		}
		x.MySQL.CodecDecodeSelf(d)
	}
	for {
		yyj7++
		if yyhl7 {
			yyb7 = yyj7 > l
		} else {
			yyb7 = r.CheckBreak()
		}
		if yyb7 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5174)
		z.DecStructFieldNotFound(yyj7-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x DormantDatabasePhase) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym1 := z.EncBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeString(codecSelferC_UTF85174, string(x))
	}
}

func (x *DormantDatabasePhase) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*string)(x)) = r.DecodeString()
	}
}

func (x *DormantDatabaseStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [5]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.CreationTime != nil
			yyq2[1] = x.PausingTime != nil
			yyq2[2] = x.WipeOutTime != nil
			yyq2[3] = x.Phase != ""
			yyq2[4] = x.Reason != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(5)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[0] {
					if x.CreationTime == nil {
						r.EncodeNil()
					} else {
						yym4 := z.EncBinary()
						_ = yym4
						if false {
						} else if z.HasExtensions() && z.EncExt(x.CreationTime) {
						} else if yym4 {
							z.EncBinaryMarshal(x.CreationTime)
						} else if !yym4 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreationTime)
						} else {
							z.EncFallback(x.CreationTime)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("creationTime"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.CreationTime == nil {
						r.EncodeNil()
					} else {
						yym5 := z.EncBinary()
						_ = yym5
						if false {
						} else if z.HasExtensions() && z.EncExt(x.CreationTime) {
						} else if yym5 {
							z.EncBinaryMarshal(x.CreationTime)
						} else if !yym5 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreationTime)
						} else {
							z.EncFallback(x.CreationTime)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[1] {
					if x.PausingTime == nil {
						r.EncodeNil()
					} else {
						yym7 := z.EncBinary()
						_ = yym7
						if false {
						} else if z.HasExtensions() && z.EncExt(x.PausingTime) {
						} else if yym7 {
							z.EncBinaryMarshal(x.PausingTime)
						} else if !yym7 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.PausingTime)
						} else {
							z.EncFallback(x.PausingTime)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("pausingTime"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.PausingTime == nil {
						r.EncodeNil()
					} else {
						yym8 := z.EncBinary()
						_ = yym8
						if false {
						} else if z.HasExtensions() && z.EncExt(x.PausingTime) {
						} else if yym8 {
							z.EncBinaryMarshal(x.PausingTime)
						} else if !yym8 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.PausingTime)
						} else {
							z.EncFallback(x.PausingTime)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[2] {
					if x.WipeOutTime == nil {
						r.EncodeNil()
					} else {
						yym10 := z.EncBinary()
						_ = yym10
						if false {
						} else if z.HasExtensions() && z.EncExt(x.WipeOutTime) {
						} else if yym10 {
							z.EncBinaryMarshal(x.WipeOutTime)
						} else if !yym10 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.WipeOutTime)
						} else {
							z.EncFallback(x.WipeOutTime)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("wipeOutTime"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.WipeOutTime == nil {
						r.EncodeNil()
					} else {
						yym11 := z.EncBinary()
						_ = yym11
						if false {
						} else if z.HasExtensions() && z.EncExt(x.WipeOutTime) {
						} else if yym11 {
							z.EncBinaryMarshal(x.WipeOutTime)
						} else if !yym11 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.WipeOutTime)
						} else {
							z.EncFallback(x.WipeOutTime)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[3] {
					x.Phase.CodecEncodeSelf(e)
				} else {
					r.EncodeString(codecSelferC_UTF85174, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("phase"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					x.Phase.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[4] {
					yym16 := z.EncBinary()
					_ = yym16
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.Reason))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85174, "")
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("reason"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym17 := z.EncBinary()
					_ = yym17
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.Reason))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5174)
			}
		}
	}
}

func (x *DormantDatabaseStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5174 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5174)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5174 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5174)
		}
	}
}

func (x *DormantDatabaseStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5174)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5174)
		switch yys3 {
		case "creationTime":
			if r.TryDecodeAsNil() {
				if x.CreationTime != nil {
					x.CreationTime = nil
				}
			} else {
				if x.CreationTime == nil {
					x.CreationTime = new(pkg1_v1.Time)
				}
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(x.CreationTime) {
				} else if yym5 {
					z.DecBinaryUnmarshal(x.CreationTime)
				} else if !yym5 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.CreationTime)
				} else {
					z.DecFallback(x.CreationTime, false)
				}
			}
		case "pausingTime":
			if r.TryDecodeAsNil() {
				if x.PausingTime != nil {
					x.PausingTime = nil
				}
			} else {
				if x.PausingTime == nil {
					x.PausingTime = new(pkg1_v1.Time)
				}
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else if z.HasExtensions() && z.DecExt(x.PausingTime) {
				} else if yym7 {
					z.DecBinaryUnmarshal(x.PausingTime)
				} else if !yym7 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.PausingTime)
				} else {
					z.DecFallback(x.PausingTime, false)
				}
			}
		case "wipeOutTime":
			if r.TryDecodeAsNil() {
				if x.WipeOutTime != nil {
					x.WipeOutTime = nil
				}
			} else {
				if x.WipeOutTime == nil {
					x.WipeOutTime = new(pkg1_v1.Time)
				}
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(x.WipeOutTime) {
				} else if yym9 {
					z.DecBinaryUnmarshal(x.WipeOutTime)
				} else if !yym9 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.WipeOutTime)
				} else {
					z.DecFallback(x.WipeOutTime, false)
				}
			}
		case "phase":
			if r.TryDecodeAsNil() {
				x.Phase = ""
			} else {
				yyv10 := &x.Phase
				yyv10.CodecDecodeSelf(d)
			}
		case "reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				yyv11 := &x.Reason
				yym12 := z.DecBinary()
				_ = yym12
				if false {
				} else {
					*((*string)(yyv11)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5174)
}

func (x *DormantDatabaseStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj13 int
	var yyb13 bool
	var yyhl13 bool = l >= 0
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		if x.CreationTime != nil {
			x.CreationTime = nil
		}
	} else {
		if x.CreationTime == nil {
			x.CreationTime = new(pkg1_v1.Time)
		}
		yym15 := z.DecBinary()
		_ = yym15
		if false {
		} else if z.HasExtensions() && z.DecExt(x.CreationTime) {
		} else if yym15 {
			z.DecBinaryUnmarshal(x.CreationTime)
		} else if !yym15 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.CreationTime)
		} else {
			z.DecFallback(x.CreationTime, false)
		}
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		if x.PausingTime != nil {
			x.PausingTime = nil
		}
	} else {
		if x.PausingTime == nil {
			x.PausingTime = new(pkg1_v1.Time)
		}
		yym17 := z.DecBinary()
		_ = yym17
		if false {
		} else if z.HasExtensions() && z.DecExt(x.PausingTime) {
		} else if yym17 {
			z.DecBinaryUnmarshal(x.PausingTime)
		} else if !yym17 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.PausingTime)
		} else {
			z.DecFallback(x.PausingTime, false)
		}
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		if x.WipeOutTime != nil {
			x.WipeOutTime = nil
		}
	} else {
		if x.WipeOutTime == nil {
			x.WipeOutTime = new(pkg1_v1.Time)
		}
		yym19 := z.DecBinary()
		_ = yym19
		if false {
		} else if z.HasExtensions() && z.DecExt(x.WipeOutTime) {
		} else if yym19 {
			z.DecBinaryUnmarshal(x.WipeOutTime)
		} else if !yym19 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.WipeOutTime)
		} else {
			z.DecFallback(x.WipeOutTime, false)
		}
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Phase = ""
	} else {
		yyv20 := &x.Phase
		yyv20.CodecDecodeSelf(d)
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		yyv21 := &x.Reason
		yym22 := z.DecBinary()
		_ = yym22
		if false {
		} else {
			*((*string)(yyv21)) = r.DecodeString()
		}
	}
	for {
		yyj13++
		if yyhl13 {
			yyb13 = yyj13 > l
		} else {
			yyb13 = r.CheckBreak()
		}
		if yyb13 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5174)
		z.DecStructFieldNotFound(yyj13-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x *DormantDatabaseList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			yyq2[3] = len(x.Items) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85174, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85174, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85174, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[2] {
					yy10 := &x.ListMeta
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else if z.HasExtensions() && z.EncExt(yy10) {
					} else {
						z.EncFallback(yy10)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					yy12 := &x.ListMeta
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else if z.HasExtensions() && z.EncExt(yy12) {
					} else {
						z.EncFallback(yy12)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5174)
				if yyq2[3] {
					if x.Items == nil {
						r.EncodeNil()
					} else {
						yym15 := z.EncBinary()
						_ = yym15
						if false {
						} else {
							h.encSliceDormantDatabase(([]DormantDatabase)(x.Items), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5174)
					r.EncodeString(codecSelferC_UTF85174, string("items"))
					z.EncSendContainerState(codecSelfer_containerMapValue5174)
					if x.Items == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							h.encSliceDormantDatabase(([]DormantDatabase)(x.Items), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5174)
			}
		}
	}
}

func (x *DormantDatabaseList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5174 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5174)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5174 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5174)
		}
	}
}

func (x *DormantDatabaseList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5174)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5174)
		switch yys3 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv4 := &x.Kind
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				yyv6 := &x.APIVersion
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ListMeta = pkg1_v1.ListMeta{}
			} else {
				yyv8 := &x.ListMeta
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv8) {
				} else {
					z.DecFallback(yyv8, false)
				}
			}
		case "items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv10 := &x.Items
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					h.decSliceDormantDatabase((*[]DormantDatabase)(yyv10), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5174)
}

func (x *DormantDatabaseList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv13 := &x.Kind
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		yyv15 := &x.APIVersion
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.ListMeta = pkg1_v1.ListMeta{}
	} else {
		yyv17 := &x.ListMeta
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv17) {
		} else {
			z.DecFallback(yyv17, false)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5174)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv19 := &x.Items
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			h.decSliceDormantDatabase((*[]DormantDatabase)(yyv19), d)
		}
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5174)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x codecSelfer5174) encSliceDormantDatabase(v []DormantDatabase, e *codec1978.Encoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem5174)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd5174)
}

func (x codecSelfer5174) decSliceDormantDatabase(v *[]DormantDatabase, d *codec1978.Decoder) {
	var h codecSelfer5174
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []DormantDatabase{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 584)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]DormantDatabase, yyrl1)
				}
			} else {
				yyv1 = make([]DormantDatabase, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = DormantDatabase{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, DormantDatabase{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = DormantDatabase{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, DormantDatabase{}) // var yyz1 DormantDatabase
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = DormantDatabase{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []DormantDatabase{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}
