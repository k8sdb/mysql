// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package v1alpha1

import (
	"errors"
	"fmt"
	"reflect"
	"runtime"
	time "time"

	pkg3_types "github.com/appscode/go/encoding/json/types"
	codec1978 "github.com/ugorji/go/codec"
	pkg5_resource "k8s.io/apimachinery/pkg/api/resource"
	pkg1_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	pkg2_types "k8s.io/apimachinery/pkg/types"
	pkg4_v1 "k8s.io/client-go/pkg/api/v1"
)

const (
	// ----- content types ----
	codecSelferC_UTF89677 = 1
	codecSelferC_RAW9677  = 0
	// ----- value types used ----
	codecSelferValueTypeArray9677 = 10
	codecSelferValueTypeMap9677   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey9677    = 2
	codecSelfer_containerMapValue9677  = 3
	codecSelfer_containerMapEnd9677    = 4
	codecSelfer_containerArrayElem9677 = 6
	codecSelfer_containerArrayEnd9677  = 7
)

var (
	codecSelferBitsize9677                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr9677 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer9677 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 pkg3_types.StrYo
		var v1 pkg5_resource.Quantity
		var v2 pkg1_v1.TypeMeta
		var v3 pkg2_types.UID
		var v4 pkg4_v1.PersistentVolumeClaimSpec
		var v5 time.Time
		_, _, _, _, _, _ = v0, v1, v2, v3, v4, v5
	}
}

func (x *MySQL) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [5]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			yyq2[3] = true
			yyq2[4] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(5)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[2] {
					yy10 := &x.ObjectMeta
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else if z.HasExtensions() && z.EncExt(yy10) {
					} else {
						z.EncFallback(yy10)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yy12 := &x.ObjectMeta
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else if z.HasExtensions() && z.EncExt(yy12) {
					} else {
						z.EncFallback(yy12)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[3] {
					yy15 := &x.Spec
					yy15.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("spec"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yy17 := &x.Spec
					yy17.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[4] {
					yy20 := &x.Status
					yy20.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("status"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yy22 := &x.Status
					yy22.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9677)
			}
		}
	}
}

func (x *MySQL) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9677 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9677)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9677 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9677)
		}
	}
}

func (x *MySQL) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9677)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue9677)
		switch yys3 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv4 := &x.Kind
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				yyv6 := &x.APIVersion
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ObjectMeta = pkg1_v1.ObjectMeta{}
			} else {
				yyv8 := &x.ObjectMeta
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv8) {
				} else {
					z.DecFallback(yyv8, false)
				}
			}
		case "spec":
			if r.TryDecodeAsNil() {
				x.Spec = MySQLSpec{}
			} else {
				yyv10 := &x.Spec
				yyv10.CodecDecodeSelf(d)
			}
		case "status":
			if r.TryDecodeAsNil() {
				x.Status = MySQLStatus{}
			} else {
				yyv11 := &x.Status
				yyv11.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9677)
}

func (x *MySQL) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv13 := &x.Kind
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		yyv15 := &x.APIVersion
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.ObjectMeta = pkg1_v1.ObjectMeta{}
	} else {
		yyv17 := &x.ObjectMeta
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv17) {
		} else {
			z.DecFallback(yyv17, false)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Spec = MySQLSpec{}
	} else {
		yyv19 := &x.Spec
		yyv19.CodecDecodeSelf(d)
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Status = MySQLStatus{}
	} else {
		yyv20 := &x.Status
		yyv20.CodecDecodeSelf(d)
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9677)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
}

func (x *MySQLSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [13]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Version != ""
			yyq2[1] = x.Replicas != 0
			yyq2[2] = x.Storage != nil
			yyq2[3] = x.DatabaseSecret != nil
			yyq2[4] = len(x.NodeSelector) != 0
			yyq2[5] = x.Init != nil
			yyq2[6] = x.BackupSchedule != nil
			yyq2[7] = x.DoNotPause != false
			yyq2[8] = x.Monitor != nil
			yyq2[9] = true
			yyq2[10] = x.Affinity != nil
			yyq2[11] = x.SchedulerName != ""
			yyq2[12] = len(x.Tolerations) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(13)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else if z.HasExtensions() && z.EncExt(x.Version) {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Version))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("version"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else if z.HasExtensions() && z.EncExt(x.Version) {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Version))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeInt(int64(x.Replicas))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("replicas"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeInt(int64(x.Replicas))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[2] {
					if x.Storage == nil {
						r.EncodeNil()
					} else {
						x.Storage.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("storage"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.Storage == nil {
						r.EncodeNil()
					} else {
						x.Storage.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[3] {
					if x.DatabaseSecret == nil {
						r.EncodeNil()
					} else {
						x.DatabaseSecret.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("databaseSecret"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.DatabaseSecret == nil {
						r.EncodeNil()
					} else {
						x.DatabaseSecret.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[4] {
					if x.NodeSelector == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							z.F.EncMapStringStringV(x.NodeSelector, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("nodeSelector"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.NodeSelector == nil {
						r.EncodeNil()
					} else {
						yym17 := z.EncBinary()
						_ = yym17
						if false {
						} else {
							z.F.EncMapStringStringV(x.NodeSelector, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[5] {
					if x.Init == nil {
						r.EncodeNil()
					} else {
						x.Init.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("init"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.Init == nil {
						r.EncodeNil()
					} else {
						x.Init.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[6] {
					if x.BackupSchedule == nil {
						r.EncodeNil()
					} else {
						x.BackupSchedule.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("backupSchedule"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.BackupSchedule == nil {
						r.EncodeNil()
					} else {
						x.BackupSchedule.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[7] {
					yym25 := z.EncBinary()
					_ = yym25
					if false {
					} else {
						r.EncodeBool(bool(x.DoNotPause))
					}
				} else {
					r.EncodeBool(false)
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("doNotPause"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym26 := z.EncBinary()
					_ = yym26
					if false {
					} else {
						r.EncodeBool(bool(x.DoNotPause))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[8] {
					if x.Monitor == nil {
						r.EncodeNil()
					} else {
						x.Monitor.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("monitor"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.Monitor == nil {
						r.EncodeNil()
					} else {
						x.Monitor.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[9] {
					yy31 := &x.Resources
					yy31.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("resources"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yy33 := &x.Resources
					yy33.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[10] {
					if x.Affinity == nil {
						r.EncodeNil()
					} else {
						x.Affinity.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("affinity"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.Affinity == nil {
						r.EncodeNil()
					} else {
						x.Affinity.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[11] {
					yym39 := z.EncBinary()
					_ = yym39
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.SchedulerName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("schedulerName"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym40 := z.EncBinary()
					_ = yym40
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.SchedulerName))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[12] {
					if x.Tolerations == nil {
						r.EncodeNil()
					} else {
						yym42 := z.EncBinary()
						_ = yym42
						if false {
						} else {
							h.encSlicev1_Toleration(([]pkg4_v1.Toleration)(x.Tolerations), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("tolerations"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.Tolerations == nil {
						r.EncodeNil()
					} else {
						yym43 := z.EncBinary()
						_ = yym43
						if false {
						} else {
							h.encSlicev1_Toleration(([]pkg4_v1.Toleration)(x.Tolerations), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9677)
			}
		}
	}
}

func (x *MySQLSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9677 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9677)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9677 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9677)
		}
	}
}

func (x *MySQLSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9677)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue9677)
		switch yys3 {
		case "version":
			if r.TryDecodeAsNil() {
				x.Version = ""
			} else {
				yyv4 := &x.Version
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else if !yym5 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv4)
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "replicas":
			if r.TryDecodeAsNil() {
				x.Replicas = 0
			} else {
				yyv6 := &x.Replicas
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*int32)(yyv6)) = int32(r.DecodeInt(32))
				}
			}
		case "storage":
			if r.TryDecodeAsNil() {
				if x.Storage != nil {
					x.Storage = nil
				}
			} else {
				if x.Storage == nil {
					x.Storage = new(pkg4_v1.PersistentVolumeClaimSpec)
				}
				x.Storage.CodecDecodeSelf(d)
			}
		case "databaseSecret":
			if r.TryDecodeAsNil() {
				if x.DatabaseSecret != nil {
					x.DatabaseSecret = nil
				}
			} else {
				if x.DatabaseSecret == nil {
					x.DatabaseSecret = new(pkg4_v1.SecretVolumeSource)
				}
				x.DatabaseSecret.CodecDecodeSelf(d)
			}
		case "nodeSelector":
			if r.TryDecodeAsNil() {
				x.NodeSelector = nil
			} else {
				yyv10 := &x.NodeSelector
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					z.F.DecMapStringStringX(yyv10, false, d)
				}
			}
		case "init":
			if r.TryDecodeAsNil() {
				if x.Init != nil {
					x.Init = nil
				}
			} else {
				if x.Init == nil {
					x.Init = new(InitSpec)
				}
				x.Init.CodecDecodeSelf(d)
			}
		case "backupSchedule":
			if r.TryDecodeAsNil() {
				if x.BackupSchedule != nil {
					x.BackupSchedule = nil
				}
			} else {
				if x.BackupSchedule == nil {
					x.BackupSchedule = new(BackupScheduleSpec)
				}
				x.BackupSchedule.CodecDecodeSelf(d)
			}
		case "doNotPause":
			if r.TryDecodeAsNil() {
				x.DoNotPause = false
			} else {
				yyv14 := &x.DoNotPause
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					*((*bool)(yyv14)) = r.DecodeBool()
				}
			}
		case "monitor":
			if r.TryDecodeAsNil() {
				if x.Monitor != nil {
					x.Monitor = nil
				}
			} else {
				if x.Monitor == nil {
					x.Monitor = new(MonitorSpec)
				}
				x.Monitor.CodecDecodeSelf(d)
			}
		case "resources":
			if r.TryDecodeAsNil() {
				x.Resources = pkg4_v1.ResourceRequirements{}
			} else {
				yyv17 := &x.Resources
				yyv17.CodecDecodeSelf(d)
			}
		case "affinity":
			if r.TryDecodeAsNil() {
				if x.Affinity != nil {
					x.Affinity = nil
				}
			} else {
				if x.Affinity == nil {
					x.Affinity = new(pkg4_v1.Affinity)
				}
				x.Affinity.CodecDecodeSelf(d)
			}
		case "schedulerName":
			if r.TryDecodeAsNil() {
				x.SchedulerName = ""
			} else {
				yyv19 := &x.SchedulerName
				yym20 := z.DecBinary()
				_ = yym20
				if false {
				} else {
					*((*string)(yyv19)) = r.DecodeString()
				}
			}
		case "tolerations":
			if r.TryDecodeAsNil() {
				x.Tolerations = nil
			} else {
				yyv21 := &x.Tolerations
				yym22 := z.DecBinary()
				_ = yym22
				if false {
				} else {
					h.decSlicev1_Toleration((*[]pkg4_v1.Toleration)(yyv21), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9677)
}

func (x *MySQLSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj23 int
	var yyb23 bool
	var yyhl23 bool = l >= 0
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Version = ""
	} else {
		yyv24 := &x.Version
		yym25 := z.DecBinary()
		_ = yym25
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv24) {
		} else if !yym25 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv24)
		} else {
			*((*string)(yyv24)) = r.DecodeString()
		}
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Replicas = 0
	} else {
		yyv26 := &x.Replicas
		yym27 := z.DecBinary()
		_ = yym27
		if false {
		} else {
			*((*int32)(yyv26)) = int32(r.DecodeInt(32))
		}
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.Storage != nil {
			x.Storage = nil
		}
	} else {
		if x.Storage == nil {
			x.Storage = new(pkg4_v1.PersistentVolumeClaimSpec)
		}
		x.Storage.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.DatabaseSecret != nil {
			x.DatabaseSecret = nil
		}
	} else {
		if x.DatabaseSecret == nil {
			x.DatabaseSecret = new(pkg4_v1.SecretVolumeSource)
		}
		x.DatabaseSecret.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.NodeSelector = nil
	} else {
		yyv30 := &x.NodeSelector
		yym31 := z.DecBinary()
		_ = yym31
		if false {
		} else {
			z.F.DecMapStringStringX(yyv30, false, d)
		}
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.Init != nil {
			x.Init = nil
		}
	} else {
		if x.Init == nil {
			x.Init = new(InitSpec)
		}
		x.Init.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.BackupSchedule != nil {
			x.BackupSchedule = nil
		}
	} else {
		if x.BackupSchedule == nil {
			x.BackupSchedule = new(BackupScheduleSpec)
		}
		x.BackupSchedule.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.DoNotPause = false
	} else {
		yyv34 := &x.DoNotPause
		yym35 := z.DecBinary()
		_ = yym35
		if false {
		} else {
			*((*bool)(yyv34)) = r.DecodeBool()
		}
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.Monitor != nil {
			x.Monitor = nil
		}
	} else {
		if x.Monitor == nil {
			x.Monitor = new(MonitorSpec)
		}
		x.Monitor.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Resources = pkg4_v1.ResourceRequirements{}
	} else {
		yyv37 := &x.Resources
		yyv37.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.Affinity != nil {
			x.Affinity = nil
		}
	} else {
		if x.Affinity == nil {
			x.Affinity = new(pkg4_v1.Affinity)
		}
		x.Affinity.CodecDecodeSelf(d)
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.SchedulerName = ""
	} else {
		yyv39 := &x.SchedulerName
		yym40 := z.DecBinary()
		_ = yym40
		if false {
		} else {
			*((*string)(yyv39)) = r.DecodeString()
		}
	}
	yyj23++
	if yyhl23 {
		yyb23 = yyj23 > l
	} else {
		yyb23 = r.CheckBreak()
	}
	if yyb23 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Tolerations = nil
	} else {
		yyv41 := &x.Tolerations
		yym42 := z.DecBinary()
		_ = yym42
		if false {
		} else {
			h.decSlicev1_Toleration((*[]pkg4_v1.Toleration)(yyv41), d)
		}
	}
	for {
		yyj23++
		if yyhl23 {
			yyb23 = yyj23 > l
		} else {
			yyb23 = r.CheckBreak()
		}
		if yyb23 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9677)
		z.DecStructFieldNotFound(yyj23-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
}

func (x *MySQLStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.CreationTime != nil
			yyq2[1] = x.Phase != ""
			yyq2[2] = x.Reason != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[0] {
					if x.CreationTime == nil {
						r.EncodeNil()
					} else {
						yym4 := z.EncBinary()
						_ = yym4
						if false {
						} else if z.HasExtensions() && z.EncExt(x.CreationTime) {
						} else if yym4 {
							z.EncBinaryMarshal(x.CreationTime)
						} else if !yym4 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreationTime)
						} else {
							z.EncFallback(x.CreationTime)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("creationTime"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.CreationTime == nil {
						r.EncodeNil()
					} else {
						yym5 := z.EncBinary()
						_ = yym5
						if false {
						} else if z.HasExtensions() && z.EncExt(x.CreationTime) {
						} else if yym5 {
							z.EncBinaryMarshal(x.CreationTime)
						} else if !yym5 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreationTime)
						} else {
							z.EncFallback(x.CreationTime)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[1] {
					yysf7 := &x.Phase
					yysf7.CodecEncodeSelf(e)
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("phase"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yysf8 := &x.Phase
					yysf8.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Reason))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("reason"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Reason))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9677)
			}
		}
	}
}

func (x *MySQLStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9677 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9677)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9677 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9677)
		}
	}
}

func (x *MySQLStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9677)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue9677)
		switch yys3 {
		case "creationTime":
			if r.TryDecodeAsNil() {
				if x.CreationTime != nil {
					x.CreationTime = nil
				}
			} else {
				if x.CreationTime == nil {
					x.CreationTime = new(pkg1_v1.Time)
				}
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(x.CreationTime) {
				} else if yym5 {
					z.DecBinaryUnmarshal(x.CreationTime)
				} else if !yym5 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.CreationTime)
				} else {
					z.DecFallback(x.CreationTime, false)
				}
			}
		case "phase":
			if r.TryDecodeAsNil() {
				x.Phase = ""
			} else {
				yyv6 := &x.Phase
				yyv6.CodecDecodeSelf(d)
			}
		case "reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				yyv7 := &x.Reason
				yym8 := z.DecBinary()
				_ = yym8
				if false {
				} else {
					*((*string)(yyv7)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9677)
}

func (x *MySQLStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj9 int
	var yyb9 bool
	var yyhl9 bool = l >= 0
	yyj9++
	if yyhl9 {
		yyb9 = yyj9 > l
	} else {
		yyb9 = r.CheckBreak()
	}
	if yyb9 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		if x.CreationTime != nil {
			x.CreationTime = nil
		}
	} else {
		if x.CreationTime == nil {
			x.CreationTime = new(pkg1_v1.Time)
		}
		yym11 := z.DecBinary()
		_ = yym11
		if false {
		} else if z.HasExtensions() && z.DecExt(x.CreationTime) {
		} else if yym11 {
			z.DecBinaryUnmarshal(x.CreationTime)
		} else if !yym11 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.CreationTime)
		} else {
			z.DecFallback(x.CreationTime, false)
		}
	}
	yyj9++
	if yyhl9 {
		yyb9 = yyj9 > l
	} else {
		yyb9 = r.CheckBreak()
	}
	if yyb9 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Phase = ""
	} else {
		yyv12 := &x.Phase
		yyv12.CodecDecodeSelf(d)
	}
	yyj9++
	if yyhl9 {
		yyb9 = yyj9 > l
	} else {
		yyb9 = r.CheckBreak()
	}
	if yyb9 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		yyv13 := &x.Reason
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	for {
		yyj9++
		if yyhl9 {
			yyb9 = yyj9 > l
		} else {
			yyb9 = r.CheckBreak()
		}
		if yyb9 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9677)
		z.DecStructFieldNotFound(yyj9-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
}

func (x *MySQLList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			yyq2[3] = len(x.Items) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89677, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89677, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[2] {
					yy10 := &x.ListMeta
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else if z.HasExtensions() && z.EncExt(yy10) {
					} else {
						z.EncFallback(yy10)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					yy12 := &x.ListMeta
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else if z.HasExtensions() && z.EncExt(yy12) {
					} else {
						z.EncFallback(yy12)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9677)
				if yyq2[3] {
					if x.Items == nil {
						r.EncodeNil()
					} else {
						yym15 := z.EncBinary()
						_ = yym15
						if false {
						} else {
							h.encSlicePtrtoMySQL(([]*MySQL)(x.Items), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9677)
					r.EncodeString(codecSelferC_UTF89677, string("items"))
					z.EncSendContainerState(codecSelfer_containerMapValue9677)
					if x.Items == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							h.encSlicePtrtoMySQL(([]*MySQL)(x.Items), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9677)
			}
		}
	}
}

func (x *MySQLList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9677 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9677)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9677 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9677)
		}
	}
}

func (x *MySQLList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9677)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue9677)
		switch yys3 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv4 := &x.Kind
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				yyv6 := &x.APIVersion
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ListMeta = pkg1_v1.ListMeta{}
			} else {
				yyv8 := &x.ListMeta
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv8) {
				} else {
					z.DecFallback(yyv8, false)
				}
			}
		case "items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv10 := &x.Items
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					h.decSlicePtrtoMySQL((*[]*MySQL)(yyv10), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9677)
}

func (x *MySQLList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv13 := &x.Kind
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		yyv15 := &x.APIVersion
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.ListMeta = pkg1_v1.ListMeta{}
	} else {
		yyv17 := &x.ListMeta
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv17) {
		} else {
			z.DecFallback(yyv17, false)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9677)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv19 := &x.Items
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			h.decSlicePtrtoMySQL((*[]*MySQL)(yyv19), d)
		}
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9677)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9677)
}

func (x codecSelfer9677) encSlicev1_Toleration(v []pkg4_v1.Toleration, e *codec1978.Encoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9677)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9677)
}

func (x codecSelfer9677) decSlicev1_Toleration(v *[]pkg4_v1.Toleration, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []pkg4_v1.Toleration{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 72)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]pkg4_v1.Toleration, yyrl1)
				}
			} else {
				yyv1 = make([]pkg4_v1.Toleration, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = pkg4_v1.Toleration{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, pkg4_v1.Toleration{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = pkg4_v1.Toleration{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, pkg4_v1.Toleration{}) // var yyz1 pkg4_v1.Toleration
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = pkg4_v1.Toleration{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []pkg4_v1.Toleration{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9677) encSlicePtrtoMySQL(v []*MySQL, e *codec1978.Encoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9677)
		if yyv1 == nil {
			r.EncodeNil()
		} else {
			yyv1.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9677)
}

func (x codecSelfer9677) decSlicePtrtoMySQL(v *[]*MySQL, d *codec1978.Decoder) {
	var h codecSelfer9677
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []*MySQL{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]*MySQL, yyrl1)
				}
			} else {
				yyv1 = make([]*MySQL, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				if yyv1[yyj1] != nil {
					*yyv1[yyj1] = MySQL{}
				}
			} else {
				if yyv1[yyj1] == nil {
					yyv1[yyj1] = new(MySQL)
				}
				yyw2 := yyv1[yyj1]
				yyw2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, nil)
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					if yyv1[yyj1] != nil {
						*yyv1[yyj1] = MySQL{}
					}
				} else {
					if yyv1[yyj1] == nil {
						yyv1[yyj1] = new(MySQL)
					}
					yyw3 := yyv1[yyj1]
					yyw3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, nil) // var yyz1 *MySQL
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					if yyv1[yyj1] != nil {
						*yyv1[yyj1] = MySQL{}
					}
				} else {
					if yyv1[yyj1] == nil {
						yyv1[yyj1] = new(MySQL)
					}
					yyw4 := yyv1[yyj1]
					yyw4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []*MySQL{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}
