// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package v1alpha1

import (
	"errors"
	"fmt"
	"reflect"
	"runtime"
	time "time"

	codec1978 "github.com/ugorji/go/codec"
	pkg4_resource "k8s.io/apimachinery/pkg/api/resource"
	pkg1_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	pkg2_types "k8s.io/apimachinery/pkg/types"
	pkg3_v1 "k8s.io/client-go/pkg/api/v1"
)

const (
	// ----- content types ----
	codecSelferC_UTF85953 = 1
	codecSelferC_RAW5953  = 0
	// ----- value types used ----
	codecSelferValueTypeArray5953 = 10
	codecSelferValueTypeMap5953   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey5953    = 2
	codecSelfer_containerMapValue5953  = 3
	codecSelfer_containerMapEnd5953    = 4
	codecSelfer_containerArrayElem5953 = 6
	codecSelfer_containerArrayEnd5953  = 7
)

var (
	codecSelferBitsize5953                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr5953 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer5953 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 pkg4_resource.Quantity
		var v1 pkg1_v1.TypeMeta
		var v2 pkg2_types.UID
		var v3 pkg3_v1.VolumeSource
		var v4 time.Time
		_, _, _, _, _ = v0, v1, v2, v3, v4
	}
}

func (x *Snapshot) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [5]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			yyq2[3] = true
			yyq2[4] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(5)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[2] {
					yy10 := &x.ObjectMeta
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else if z.HasExtensions() && z.EncExt(yy10) {
					} else {
						z.EncFallback(yy10)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yy12 := &x.ObjectMeta
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else if z.HasExtensions() && z.EncExt(yy12) {
					} else {
						z.EncFallback(yy12)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[3] {
					yy15 := &x.Spec
					yy15.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("spec"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yy17 := &x.Spec
					yy17.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[4] {
					yy20 := &x.Status
					yy20.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("status"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yy22 := &x.Status
					yy22.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5953)
			}
		}
	}
}

func (x *Snapshot) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5953 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5953)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5953 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5953)
		}
	}
}

func (x *Snapshot) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5953)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5953)
		switch yys3 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv4 := &x.Kind
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				yyv6 := &x.APIVersion
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ObjectMeta = pkg1_v1.ObjectMeta{}
			} else {
				yyv8 := &x.ObjectMeta
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv8) {
				} else {
					z.DecFallback(yyv8, false)
				}
			}
		case "spec":
			if r.TryDecodeAsNil() {
				x.Spec = SnapshotSpec{}
			} else {
				yyv10 := &x.Spec
				yyv10.CodecDecodeSelf(d)
			}
		case "status":
			if r.TryDecodeAsNil() {
				x.Status = SnapshotStatus{}
			} else {
				yyv11 := &x.Status
				yyv11.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5953)
}

func (x *Snapshot) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv13 := &x.Kind
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		yyv15 := &x.APIVersion
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.ObjectMeta = pkg1_v1.ObjectMeta{}
	} else {
		yyv17 := &x.ObjectMeta
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv17) {
		} else {
			z.DecFallback(yyv17, false)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Spec = SnapshotSpec{}
	} else {
		yyv19 := &x.Spec
		yyv19.CodecDecodeSelf(d)
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Status = SnapshotStatus{}
	} else {
		yyv20 := &x.Status
		yyv20.CodecDecodeSelf(d)
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5953)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
}

func (x *SnapshotSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [8]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.DatabaseName != ""
			yyq2[1] = x.StorageSecretName != ""
			yyq2[2] = x.SnapshotStorageSpec.Local != nil && x.Local != nil
			yyq2[3] = x.SnapshotStorageSpec.S3 != nil && x.S3 != nil
			yyq2[4] = x.SnapshotStorageSpec.GCS != nil && x.GCS != nil
			yyq2[5] = x.SnapshotStorageSpec.Azure != nil && x.Azure != nil
			yyq2[6] = x.SnapshotStorageSpec.Swift != nil && x.Swift != nil
			yyq2[7] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(8)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.DatabaseName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("databaseName"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.DatabaseName))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.StorageSecretName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("storageSecretName"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.StorageSecretName))
					}
				}
			}
			var yyn9 bool
			if x.SnapshotStorageSpec.Local == nil {
				yyn9 = true
				goto LABEL9
			}
		LABEL9:
			if yyr2 || yy2arr2 {
				if yyn9 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem5953)
					if yyq2[2] {
						if x.Local == nil {
							r.EncodeNil()
						} else {
							x.Local.CodecEncodeSelf(e)
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("local"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if yyn9 {
						r.EncodeNil()
					} else {
						if x.Local == nil {
							r.EncodeNil()
						} else {
							x.Local.CodecEncodeSelf(e)
						}
					}
				}
			}
			var yyn12 bool
			if x.SnapshotStorageSpec.S3 == nil {
				yyn12 = true
				goto LABEL12
			}
		LABEL12:
			if yyr2 || yy2arr2 {
				if yyn12 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem5953)
					if yyq2[3] {
						if x.S3 == nil {
							r.EncodeNil()
						} else {
							x.S3.CodecEncodeSelf(e)
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("s3"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if yyn12 {
						r.EncodeNil()
					} else {
						if x.S3 == nil {
							r.EncodeNil()
						} else {
							x.S3.CodecEncodeSelf(e)
						}
					}
				}
			}
			var yyn15 bool
			if x.SnapshotStorageSpec.GCS == nil {
				yyn15 = true
				goto LABEL15
			}
		LABEL15:
			if yyr2 || yy2arr2 {
				if yyn15 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem5953)
					if yyq2[4] {
						if x.GCS == nil {
							r.EncodeNil()
						} else {
							x.GCS.CodecEncodeSelf(e)
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("gcs"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if yyn15 {
						r.EncodeNil()
					} else {
						if x.GCS == nil {
							r.EncodeNil()
						} else {
							x.GCS.CodecEncodeSelf(e)
						}
					}
				}
			}
			var yyn18 bool
			if x.SnapshotStorageSpec.Azure == nil {
				yyn18 = true
				goto LABEL18
			}
		LABEL18:
			if yyr2 || yy2arr2 {
				if yyn18 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem5953)
					if yyq2[5] {
						if x.Azure == nil {
							r.EncodeNil()
						} else {
							x.Azure.CodecEncodeSelf(e)
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("azure"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if yyn18 {
						r.EncodeNil()
					} else {
						if x.Azure == nil {
							r.EncodeNil()
						} else {
							x.Azure.CodecEncodeSelf(e)
						}
					}
				}
			}
			var yyn21 bool
			if x.SnapshotStorageSpec.Swift == nil {
				yyn21 = true
				goto LABEL21
			}
		LABEL21:
			if yyr2 || yy2arr2 {
				if yyn21 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem5953)
					if yyq2[6] {
						if x.Swift == nil {
							r.EncodeNil()
						} else {
							x.Swift.CodecEncodeSelf(e)
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("swift"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if yyn21 {
						r.EncodeNil()
					} else {
						if x.Swift == nil {
							r.EncodeNil()
						} else {
							x.Swift.CodecEncodeSelf(e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[7] {
					yy25 := &x.Resources
					yy25.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("resources"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yy27 := &x.Resources
					yy27.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5953)
			}
		}
	}
}

func (x *SnapshotSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5953 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5953)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5953 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5953)
		}
	}
}

func (x *SnapshotSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5953)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5953)
		switch yys3 {
		case "databaseName":
			if r.TryDecodeAsNil() {
				x.DatabaseName = ""
			} else {
				yyv4 := &x.DatabaseName
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "storageSecretName":
			if r.TryDecodeAsNil() {
				x.StorageSecretName = ""
			} else {
				yyv6 := &x.StorageSecretName
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "local":
			if x.SnapshotStorageSpec.Local == nil {
				x.SnapshotStorageSpec.Local = new(LocalSpec)
			}
			if r.TryDecodeAsNil() {
				if x.Local != nil {
					x.Local = nil
				}
			} else {
				if x.Local == nil {
					x.Local = new(LocalSpec)
				}
				x.Local.CodecDecodeSelf(d)
			}
		case "s3":
			if x.SnapshotStorageSpec.S3 == nil {
				x.SnapshotStorageSpec.S3 = new(S3Spec)
			}
			if r.TryDecodeAsNil() {
				if x.S3 != nil {
					x.S3 = nil
				}
			} else {
				if x.S3 == nil {
					x.S3 = new(S3Spec)
				}
				x.S3.CodecDecodeSelf(d)
			}
		case "gcs":
			if x.SnapshotStorageSpec.GCS == nil {
				x.SnapshotStorageSpec.GCS = new(GCSSpec)
			}
			if r.TryDecodeAsNil() {
				if x.GCS != nil {
					x.GCS = nil
				}
			} else {
				if x.GCS == nil {
					x.GCS = new(GCSSpec)
				}
				x.GCS.CodecDecodeSelf(d)
			}
		case "azure":
			if x.SnapshotStorageSpec.Azure == nil {
				x.SnapshotStorageSpec.Azure = new(AzureSpec)
			}
			if r.TryDecodeAsNil() {
				if x.Azure != nil {
					x.Azure = nil
				}
			} else {
				if x.Azure == nil {
					x.Azure = new(AzureSpec)
				}
				x.Azure.CodecDecodeSelf(d)
			}
		case "swift":
			if x.SnapshotStorageSpec.Swift == nil {
				x.SnapshotStorageSpec.Swift = new(SwiftSpec)
			}
			if r.TryDecodeAsNil() {
				if x.Swift != nil {
					x.Swift = nil
				}
			} else {
				if x.Swift == nil {
					x.Swift = new(SwiftSpec)
				}
				x.Swift.CodecDecodeSelf(d)
			}
		case "resources":
			if r.TryDecodeAsNil() {
				x.Resources = pkg3_v1.ResourceRequirements{}
			} else {
				yyv13 := &x.Resources
				yyv13.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5953)
}

func (x *SnapshotSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj14 int
	var yyb14 bool
	var yyhl14 bool = l >= 0
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.DatabaseName = ""
	} else {
		yyv15 := &x.DatabaseName
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.StorageSecretName = ""
	} else {
		yyv17 := &x.StorageSecretName
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			*((*string)(yyv17)) = r.DecodeString()
		}
	}
	if x.SnapshotStorageSpec.Local == nil {
		x.SnapshotStorageSpec.Local = new(LocalSpec)
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.Local != nil {
			x.Local = nil
		}
	} else {
		if x.Local == nil {
			x.Local = new(LocalSpec)
		}
		x.Local.CodecDecodeSelf(d)
	}
	if x.SnapshotStorageSpec.S3 == nil {
		x.SnapshotStorageSpec.S3 = new(S3Spec)
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.S3 != nil {
			x.S3 = nil
		}
	} else {
		if x.S3 == nil {
			x.S3 = new(S3Spec)
		}
		x.S3.CodecDecodeSelf(d)
	}
	if x.SnapshotStorageSpec.GCS == nil {
		x.SnapshotStorageSpec.GCS = new(GCSSpec)
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.GCS != nil {
			x.GCS = nil
		}
	} else {
		if x.GCS == nil {
			x.GCS = new(GCSSpec)
		}
		x.GCS.CodecDecodeSelf(d)
	}
	if x.SnapshotStorageSpec.Azure == nil {
		x.SnapshotStorageSpec.Azure = new(AzureSpec)
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.Azure != nil {
			x.Azure = nil
		}
	} else {
		if x.Azure == nil {
			x.Azure = new(AzureSpec)
		}
		x.Azure.CodecDecodeSelf(d)
	}
	if x.SnapshotStorageSpec.Swift == nil {
		x.SnapshotStorageSpec.Swift = new(SwiftSpec)
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.Swift != nil {
			x.Swift = nil
		}
	} else {
		if x.Swift == nil {
			x.Swift = new(SwiftSpec)
		}
		x.Swift.CodecDecodeSelf(d)
	}
	yyj14++
	if yyhl14 {
		yyb14 = yyj14 > l
	} else {
		yyb14 = r.CheckBreak()
	}
	if yyb14 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Resources = pkg3_v1.ResourceRequirements{}
	} else {
		yyv24 := &x.Resources
		yyv24.CodecDecodeSelf(d)
	}
	for {
		yyj14++
		if yyhl14 {
			yyb14 = yyj14 > l
		} else {
			yyb14 = r.CheckBreak()
		}
		if yyb14 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5953)
		z.DecStructFieldNotFound(yyj14-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
}

func (x SnapshotPhase) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym1 := z.EncBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeString(codecSelferC_UTF85953, string(x))
	}
}

func (x *SnapshotPhase) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*string)(x)) = r.DecodeString()
	}
}

func (x *SnapshotStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.StartTime != nil
			yyq2[1] = x.CompletionTime != nil
			yyq2[2] = x.Phase != ""
			yyq2[3] = x.Reason != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[0] {
					if x.StartTime == nil {
						r.EncodeNil()
					} else {
						yym4 := z.EncBinary()
						_ = yym4
						if false {
						} else if z.HasExtensions() && z.EncExt(x.StartTime) {
						} else if yym4 {
							z.EncBinaryMarshal(x.StartTime)
						} else if !yym4 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.StartTime)
						} else {
							z.EncFallback(x.StartTime)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("startTime"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if x.StartTime == nil {
						r.EncodeNil()
					} else {
						yym5 := z.EncBinary()
						_ = yym5
						if false {
						} else if z.HasExtensions() && z.EncExt(x.StartTime) {
						} else if yym5 {
							z.EncBinaryMarshal(x.StartTime)
						} else if !yym5 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.StartTime)
						} else {
							z.EncFallback(x.StartTime)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[1] {
					if x.CompletionTime == nil {
						r.EncodeNil()
					} else {
						yym7 := z.EncBinary()
						_ = yym7
						if false {
						} else if z.HasExtensions() && z.EncExt(x.CompletionTime) {
						} else if yym7 {
							z.EncBinaryMarshal(x.CompletionTime)
						} else if !yym7 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CompletionTime)
						} else {
							z.EncFallback(x.CompletionTime)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("completionTime"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if x.CompletionTime == nil {
						r.EncodeNil()
					} else {
						yym8 := z.EncBinary()
						_ = yym8
						if false {
						} else if z.HasExtensions() && z.EncExt(x.CompletionTime) {
						} else if yym8 {
							z.EncBinaryMarshal(x.CompletionTime)
						} else if !yym8 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CompletionTime)
						} else {
							z.EncFallback(x.CompletionTime)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[2] {
					x.Phase.CodecEncodeSelf(e)
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("phase"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					x.Phase.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.Reason))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("reason"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.Reason))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5953)
			}
		}
	}
}

func (x *SnapshotStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5953 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5953)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5953 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5953)
		}
	}
}

func (x *SnapshotStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5953)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5953)
		switch yys3 {
		case "startTime":
			if r.TryDecodeAsNil() {
				if x.StartTime != nil {
					x.StartTime = nil
				}
			} else {
				if x.StartTime == nil {
					x.StartTime = new(pkg1_v1.Time)
				}
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(x.StartTime) {
				} else if yym5 {
					z.DecBinaryUnmarshal(x.StartTime)
				} else if !yym5 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.StartTime)
				} else {
					z.DecFallback(x.StartTime, false)
				}
			}
		case "completionTime":
			if r.TryDecodeAsNil() {
				if x.CompletionTime != nil {
					x.CompletionTime = nil
				}
			} else {
				if x.CompletionTime == nil {
					x.CompletionTime = new(pkg1_v1.Time)
				}
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else if z.HasExtensions() && z.DecExt(x.CompletionTime) {
				} else if yym7 {
					z.DecBinaryUnmarshal(x.CompletionTime)
				} else if !yym7 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.CompletionTime)
				} else {
					z.DecFallback(x.CompletionTime, false)
				}
			}
		case "phase":
			if r.TryDecodeAsNil() {
				x.Phase = ""
			} else {
				yyv8 := &x.Phase
				yyv8.CodecDecodeSelf(d)
			}
		case "reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				yyv9 := &x.Reason
				yym10 := z.DecBinary()
				_ = yym10
				if false {
				} else {
					*((*string)(yyv9)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5953)
}

func (x *SnapshotStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj11 int
	var yyb11 bool
	var yyhl11 bool = l >= 0
	yyj11++
	if yyhl11 {
		yyb11 = yyj11 > l
	} else {
		yyb11 = r.CheckBreak()
	}
	if yyb11 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.StartTime != nil {
			x.StartTime = nil
		}
	} else {
		if x.StartTime == nil {
			x.StartTime = new(pkg1_v1.Time)
		}
		yym13 := z.DecBinary()
		_ = yym13
		if false {
		} else if z.HasExtensions() && z.DecExt(x.StartTime) {
		} else if yym13 {
			z.DecBinaryUnmarshal(x.StartTime)
		} else if !yym13 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.StartTime)
		} else {
			z.DecFallback(x.StartTime, false)
		}
	}
	yyj11++
	if yyhl11 {
		yyb11 = yyj11 > l
	} else {
		yyb11 = r.CheckBreak()
	}
	if yyb11 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		if x.CompletionTime != nil {
			x.CompletionTime = nil
		}
	} else {
		if x.CompletionTime == nil {
			x.CompletionTime = new(pkg1_v1.Time)
		}
		yym15 := z.DecBinary()
		_ = yym15
		if false {
		} else if z.HasExtensions() && z.DecExt(x.CompletionTime) {
		} else if yym15 {
			z.DecBinaryUnmarshal(x.CompletionTime)
		} else if !yym15 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.CompletionTime)
		} else {
			z.DecFallback(x.CompletionTime, false)
		}
	}
	yyj11++
	if yyhl11 {
		yyb11 = yyj11 > l
	} else {
		yyb11 = r.CheckBreak()
	}
	if yyb11 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Phase = ""
	} else {
		yyv16 := &x.Phase
		yyv16.CodecDecodeSelf(d)
	}
	yyj11++
	if yyhl11 {
		yyb11 = yyj11 > l
	} else {
		yyb11 = r.CheckBreak()
	}
	if yyb11 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		yyv17 := &x.Reason
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			*((*string)(yyv17)) = r.DecodeString()
		}
	}
	for {
		yyj11++
		if yyhl11 {
			yyb11 = yyj11 > l
		} else {
			yyb11 = r.CheckBreak()
		}
		if yyb11 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5953)
		z.DecStructFieldNotFound(yyj11-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
}

func (x *SnapshotList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			yyq2[3] = len(x.Items) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF85953, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF85953, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[2] {
					yy10 := &x.ListMeta
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else if z.HasExtensions() && z.EncExt(yy10) {
					} else {
						z.EncFallback(yy10)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					yy12 := &x.ListMeta
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else if z.HasExtensions() && z.EncExt(yy12) {
					} else {
						z.EncFallback(yy12)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem5953)
				if yyq2[3] {
					if x.Items == nil {
						r.EncodeNil()
					} else {
						yym15 := z.EncBinary()
						_ = yym15
						if false {
						} else {
							h.encSliceSnapshot(([]Snapshot)(x.Items), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey5953)
					r.EncodeString(codecSelferC_UTF85953, string("items"))
					z.EncSendContainerState(codecSelfer_containerMapValue5953)
					if x.Items == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							h.encSliceSnapshot(([]Snapshot)(x.Items), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd5953)
			}
		}
	}
}

func (x *SnapshotList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap5953 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd5953)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray5953 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr5953)
		}
	}
}

func (x *SnapshotList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey5953)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue5953)
		switch yys3 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv4 := &x.Kind
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				yyv6 := &x.APIVersion
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ListMeta = pkg1_v1.ListMeta{}
			} else {
				yyv8 := &x.ListMeta
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv8) {
				} else {
					z.DecFallback(yyv8, false)
				}
			}
		case "items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv10 := &x.Items
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					h.decSliceSnapshot((*[]Snapshot)(yyv10), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd5953)
}

func (x *SnapshotList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv13 := &x.Kind
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		yyv15 := &x.APIVersion
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.ListMeta = pkg1_v1.ListMeta{}
	} else {
		yyv17 := &x.ListMeta
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv17) {
		} else {
			z.DecFallback(yyv17, false)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem5953)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv19 := &x.Items
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			h.decSliceSnapshot((*[]Snapshot)(yyv19), d)
		}
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem5953)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd5953)
}

func (x codecSelfer5953) encSliceSnapshot(v []Snapshot, e *codec1978.Encoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem5953)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd5953)
}

func (x codecSelfer5953) decSliceSnapshot(v *[]Snapshot, d *codec1978.Decoder) {
	var h codecSelfer5953
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []Snapshot{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 400)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]Snapshot, yyrl1)
				}
			} else {
				yyv1 = make([]Snapshot, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = Snapshot{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, Snapshot{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = Snapshot{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, Snapshot{}) // var yyz1 Snapshot
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = Snapshot{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []Snapshot{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}
